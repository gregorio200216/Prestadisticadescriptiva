getwd()
nuevo_dir <-"c:/Prestadisticadescriptiva"
setwd(nuevo_dir)
getwd()
dir()
list.files()
if (file.exists(nuevo_dir)){
cat("Directorio creado correctamente: ", nuevo_dir, "\n")
} else{
cat("fallo al crear directorio: ", nuevo_dir, "\n")
}
x = c(1,2,3,4,5)
y = c(9.1,2.4,7.5,1.3,3,4)
x+y
valor_suma = x + y
valor_suma = "x" + "y"
y = c(9.1,2.4,7.5,1.3,3,4)
print(y)
valor_suma = "x" + "y"
sum(x)
sum(y)
sum(x) + sum(y)
sum(x) - sum(y)
sum(x) * sum(y)
sum(x) / sum(y)
sum(x) ^ sum(y)
length(x)
length(y)
y^2
y*10
y+25
x+y
x = c(1,2,3,4,5)
y = c(9.1,2.4,7.5,1.3,3,4)
x+y
y = c(9.1,2.4,7.5,1.3,3.4)
x+y
x-y
#5
max(y)
#6
min(y)
#10
sum(y)
#8
abs(y)
#9
y^2
#9
sqrt(y)
#11
list(c(1,2,3,4,5), c(9.1,2.4,7.5,1.3,3.4))
#11
list(c(1,2,3,4,5,9.1,2.4,7.5,1.3,3.4))
#11
lista =list(c(1,2,3,4,5,9.1,2.4,7.5,1.3,3.4))
length(lista)
#11
lista = list(c(1,2,3,4,5,9.1,2.4,7.5,1.3,3.4))
length(lista)
print(list)
#11
list(c(1,2,3,4,5,9.1,2.4,7.5,1.3,3.4))
#11
lista = list(c(1,2,3,4,5,9.1,2.4,7.5,1.3,3.4))
#12
is.na(lista)
z = c(29,NA,12,46,73)
mean(z)
typeof(lista)
# sale como media NA porque es el valor ex
typeof(z)
z[NA]
#14
mean, na.rm(z)
#14
mean(z, na.rm = TRUE)
#15
matriz= matrix(c(24,69,3,90,23,56,1,63,87,21,77,19), ncol=3, nrow=4)
print(matriz)
#16
matriz= matrix(c(24,69,3,90,23,56,1,63,87,21,77,19), ncol=3, nrow=4, byrow=T)
print(matriz)
a = matrix(c(1:9), ncol=3, nrow=4, byrow=F)
a = matrix(c(1:9), ncol=3, nrow=3, byrow=F)
print(a)
b = matrix(c(10:18), ncol=3, nrow=3, byrow=F)
print(b)
#18
suma_matriz = a+b
print(suma_matriz)
resta_matriz = a-b
print(resta_matriz)
#19
matriz1= matrix(c(24,69,3,90,23,56,1,63,87,21,77,19), ncol=4, nrow=4)
#19
matriz1= matrix(c(24,69,3,90,23,56,1,63,87,21,77,19), ncol=4, nrow=3)
print(matriz1)
#19
matriz1= matrix(c(24,69,3,90,23,56,1,63,87,21,77,19), ncol=4, nrow=3, byrow=T)
a = matrix(c(1:9), ncol=3, nrow=3, byrow=F)
print(matriz1)
#20
mult = matriz1*3
print(mult)
#20
matriz_mult = matriz1*3
print(matriz_mult)
matriz_mult = a*b
print(matriz_mult)
matriz_mult[2,3]
matriz_mult[2, ]
matriz_mult[ ,3]
set.seed(25) #Creamos semilla para los números aleatorios
registros = 100
yacimiento = sample(c("Yac1","Yac2", "Yac3"), registros, replace = TRUE)
print(yacimiento)
yacimiento = sample(1:100, registros, replace = TRUE)
print(yacimiento)
sd(yacimiento)
#2
mean(yacimiento)
#3
median(yacimiento)
#4
mode(yacimiento)
mean = 50
#4
mfv(yacimiento)
yacimiento = sample(1:100, mean = 50, sd = 10)
yacimiento = round(rnorm(100, mean = 50, sd = 10))
print(yacimiento)
#2
mean(yacimiento)
#3
median(yacimiento)
#5
max(yacimiento)
min(yacimiento)
#5
max(yacimiento) - min(yacimiento)
#6
quantile(1)
mode <- function(yacimiento) {
return(as.numeric(names(which.max(table(yacimiento)))))
}
print(mode)
#4
mode <- (as.numeric(names(sortable(yacimiento), decreasing = TRUE)[1]))
#4
mode <- (as.numeric(names(sort(table(yacimiento), decreasing = TRUE)[1]))
print(mode)
#4
mode <- as.numeric(names(sort(table(yacimiento), decreasing = TRUE)[1]))
print(mode)
#5
rango = max(yacimiento) - min(yacimiento)
print(rango)
#6
quantile(1)
#6
quantile(yacimiento)
print(mode)
#6
quantile(yacimiento, .25)
#7
quantile(yacimiento, .75)
#8
var(yacimiento)
#9
sd(yacimiento)
#10
hist(yacimiento)
#11
diagram(yacimiento)
#11
barp(table(yacimiento),col="lightblue",cylindrical=TRUE,shadow=TRUE)
#11
boxplot(yacimiento, horizontal = T)
#11
boxplot(yacimiento, horizontal = F)
#11
boxplot(yacimiento, horizontal = T)
#10
hist(yacimiento)
library(ggplot2)
#11
ggplot(yacimiento, horizontal = T)
#11
boxplot(yacimiento, main = "Número de Cuentas", border = black)
#11
boxplot(yacimiento, main = "Número de Cuentas", border = "black")
#11
boxplot(yacimiento, main = "Número de Cuentas", border = "black", horizontal = T)
#11
boxplot(yacimiento, main = "Número de Cuentas", border = "red", horizontal = T)
#12
denso = density(yacimiento)
plot(denso, main = "Gráfico de Densidad", col = "yellow")
hist(yacimiento, freq = FALSE, main = "Histograma y densidad",
ylab = "densidad")
lines(densidad, lwd = 2, col = "red")
hist(yacimiento, freq = FALSE, main = "Histograma y densidad",
ylab = "densidad")
lines(denso, lwd = 2, col = "red")
plot(dx, lwd = 2, col = "red",
main = "Densidad")
hist(yacimiento, freq = FALSE, main = "Histograma y densidad",
ylab = "densidad")
lines(denso, lwd = 2, col = "blue")
plot(dx, lwd = 2, col = "blue",
main = "Densidad")
hist(yacimiento, freq = FALSE, main = "Histograma y densidad",
ylab = "densidad")
lines(denso, lwd = 2, col = "blue")
plot(denso, lwd = 2, col = "blue",
main = "Densidad")
rug(jitter(yacimiento))
hist(yacimiento, freq = FALSE, main = "Histograma y densidad",
ylab = "densidad")
lines(denso, lwd = 2, col = "blue")
plot(lwd = 2, col = "blue",
main = "Densidad")
hist(yacimiento, freq = FALSE, main = "Histograma y densidad",
ylab = "densidad")
lines(denso, lwd = 2, col = "blue")
plot(lwd = 2, col = "blue",
main = "Densidad")
hist(yacimiento, freq = FALSE, main = "Histograma y densidad",
ylab = "densidad")
lines(denso, lwd = 2, col = "blue")
plot(yacimiento, lwd = 2, col = "blue",
main = "Densidad")
rug(jitter(yacimiento))
hist(yacimiento, freq = FALSE, main = "Histograma y densidad",
ylab = "densidad")
lines(denso, lwd = 2, col = "blue")
plot(lwd = 2, col = "blue",
main = "Densidad")
#5
range(yacimiento)
hist(yacimiento, freq = FALSE, main = "Histograma y densidad",
ylab = "densidad")
lines(denso, lwd = 2, col = "blue")
plot(lwd = 2, col = "blue",
main = "Densidad")
plot(denso, main = "Gráfico de Densidad", col = "yellow")
#13
barplot(yacimiento, names.arg = 1:length(yacimiento), main = "Gráfico de Barras", xlab = "Categorías", ylab = "Valores", col = "skyblue", border = "black")
#13
barplot(yacimiento, names.arg = 1:length(yacimiento), main = "Gráfico de Barras", xlab = "Yacimientos", ylab = "Cuentas", col = "skyblue", border = "black")
#13
barplot(yacimiento, main = "Gráfico de Barras", xlab = "Yacimientos", ylab = "Cuentas", col = "skyblue", border = "black")
#13
barplot(yacimiento, names.arg = 1:length(yacimiento), main = "Gráfico de Barras", xlab = "Yacimientos", ylab = "Cuentas", col = "skyblue", border = "black")
print(yacimiento)
install.packages("ggplot2")
tipo_artefactos = c("Flecha", "Arco", "Borde", "Punta", "Daga", "Cuenta", "Collar", "Fíbula", "Martillo", "Hacha")
table(tipo_artefactos)
tipo_artefactos = c(("Flecha", "Arco", "Borde", "Punta", "Daga", "Cuenta", "Collar", "Fíbula", "Martillo", "Hacha"), c(1:10))
tipo_artefactos = c("Flecha", "Arco", "Borde", "Punta", "Daga", "Cuenta", "Collar", "Fíbula", "Martillo", "Hacha")
Numero_tipo_artefactos = 1:10
print(Numero_tipo_artefactos)
table(tipo_artefactos, Numero_tipo_artefactos)
set.seed(123)
registros = 10
cantidades_artefactos = sample(1:150, registros, replace = TRUE)
print(cantidades_artefactos)
cantidades_artefactos = sample(1:10, registros, replace = TRUE)
print(cantidades_artefactos)
table(tipo_artefactos, cantidades_artefactos)
table(cantidades_artefactos, tipo_artefactos)
muestras_tipo_artefacto <- sample(tipos_artefacto, 10, replace = TRUE)
tipos_artefactos = c("Flecha", "Arco", "Borde", "Punta", "Daga", "Cuenta", "Collar", "Fíbula", "Martillo", "Hacha")
muestras_tipo_artefacto <- sample(tipos_artefacto, 10, replace = TRUE)
muestras_tipo_artefacto <- sample(tipos_artefactos, 10, replace = TRUE)
datos <- data.frame(tipos_artefactos = muestras_tipo_artefacto)
print(datos)
table(datos)
datos <- data.frame(tipos_artefactos, muestras_tipo_artefacto)
print(datos)
table(datos)
datos <- data.frame(tipos_artefactos = muestras_tipo_artefacto)
print(datos)
table(datos)
